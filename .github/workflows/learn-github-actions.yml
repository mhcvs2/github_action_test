name: learn-github-actions
# on: [push]
on:
  pull_request:
    types: [opened, reopened ]
    # branched: 
    # - dev
jobs:
  test_job1:
    runs-on: [self-hosted, test]
    steps:
    - run: "echo ${{ github.repository }}; echo ${{ github.token }}"
    - name: '下载要合并的分支代码'
      uses: actions/checkout@v3
      with:
        persist-credentials: false
        repository: qiduoduo-inc/front-circle-node-server
        token: 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
        ref: dev
        path: front-circle-node-server

    - run: ls ./
    - run: 'echo ----------------------; run ./front-circle-node-server'
#    - name: '下载测试项目'
#      uses: actions/checkout@v3
#      with:
#        persist-credentials: false
#        repository: 'git@github.com:qiduoduo-inc/front-circle-test.git'
#        ref: 'dev'
#        path: front-circle-test
#
#    - name: '下载测试数据'
#      uses: actions/checkout@v3
#      with:
#        persist-credentials: false
#        repository: 'git@github.com:qiduoduo-inc/front-circle-data.git'
#        ref: 'dev'
#        path: front-circle-data
#
#      - name: '配置Node 16.15.1环境'
#        uses: actions/setup-node@v3
#        with:
#          node-version: '16.15.1'
#
#      - name: 'npm登录npm.pkg.github.com私有镜像'
#        uses: healthplace/npmrc-registry-login-action@v1.0.9
#        with:
#          scope: '@qiduoduo-inc'
#          registry: 'https://npm.pkg.github.com'
#          auth-token: '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'
#          path: /home/runner/
#
#      - name: '使用缓存安装npm依赖包'
#        uses: bahmutov/npm-install@v1
#        with:
#          useLockFile: true
#          working-directory: 'front-circle-node-server'
#
#      - name: '使用缓存安装npm依赖包'
#        uses: bahmutov/npm-install@v1
#        with:
#          useLockFile: true
#          working-directory: front-circle-test
#
#      - name: '启动server'
#        run: nohup npm run dev &
#        with:
#          working-directory: front-circle-node-server
#
#      - name: '等待server启动'
#        run: 'sleep 5'
#
#      - name: '安装playwright'
#        run: npx playwright install
#        with:
#          working-directory: front-circle-test
#
#      - name: '执行playwright测试'
#        run: 'npx playwright test tests/backend/midway/'
#        with:
#          working-directory: front-circle-test

  # test_job1:
  #   runs-on: [self-hosted, test]
  #   steps: 
  #   - run: echo ${{github.head_ref}}
  #   - uses: actions/checkout@v3
  #     with: 
  #       ref: '${{github.head_ref}}'
  #   - run: echo pull request opened....
  #   - run: cat a.py
#  test_job1:
#    runs-on: [self-hosted]
#    steps:
#      - uses: actions/checkout@master
#      - uses: travisj/build-number-action@v1
#        id: project-build-number
#      - run: pwd
#      - run: ls ./
#      - run: echo ${{ steps.project-build-number.outputs.build-number }}
# on:
#   pull_request:
#     types: [closed]
#     branched: 
#     - dev
# jobs:
#   if_merged:
#     if: github.event.pull_request.merged == true
#     runs-on: [self-hosted, test]
#     steps: 
#     - uses: actions/checkout@v3
#     - run: echo pull request was merged....
#     - run: cat a.py
#  test_job2:
#    runs-on: [self-hosted, test]
#    container:
#      image: registry.cn-hangzhou.aliyuncs.com/mhc_base/net-tools:latest
#      env:
#        NODE_ENV: development
#      ports:
#        - 80
# #      volumes:
# #        - my_docker_volume:/volume_mount
#      options: --cpus 1
  #  steps:
  #    - uses: actions/checkout@master
  #    - run: pwd
  #    - run: ls ./
  #    - run: ls /
  #    - run: echo $NODE_ENV
#   test_job3:
#     runs-on: [self-hosted, test]
#     services:
#       nginx:
#         image: nginx
#         ports:
#           - 8080:80
#     container:
#       image: centos:7
#       env:
#         NODE_ENV: development
#       ports:
#         - 80
# #      volumes:
# #        - my_docker_volume:/volume_mount
#       options: --cpus 1
#     steps:
#       - run: curl nginx:80
